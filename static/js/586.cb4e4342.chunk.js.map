{"version":3,"file":"static/js/586.cb4e4342.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/interweave/src/constants.ts","../node_modules/interweave/src/Element.tsx","../node_modules/interweave/src/Filter.ts","../node_modules/interweave/src/StyleFilter.ts","../node_modules/interweave/src/Parser.ts","../node_modules/interweave/src/Markup.tsx","../node_modules/interweave/src/Interweave.tsx","pages/Product/Product.styled.jsx","pages/Product/Product.jsx","../node_modules/escape-html/index.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/* eslint-disable no-bitwise, no-magic-numbers, sort-keys */\n\nimport { ConfigMap, FilterMap, NodeConfig } from './types';\n\n// https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories\nexport const TYPE_FLOW = 1;\nexport const TYPE_SECTION = 1 << 1;\nexport const TYPE_HEADING = 1 << 2;\nexport const TYPE_PHRASING = 1 << 3;\nexport const TYPE_EMBEDDED = 1 << 4;\nexport const TYPE_INTERACTIVE = 1 << 5;\nexport const TYPE_PALPABLE = 1 << 6;\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst tagConfigs: Record<string, Partial<NodeConfig>> = {\n\ta: {\n\t\tcontent: TYPE_FLOW | TYPE_PHRASING,\n\t\tself: false,\n\t\ttype: TYPE_FLOW | TYPE_PHRASING | TYPE_INTERACTIVE | TYPE_PALPABLE,\n\t},\n\taddress: {\n\t\tinvalid: [\n\t\t\t'h1',\n\t\t\t'h2',\n\t\t\t'h3',\n\t\t\t'h4',\n\t\t\t'h5',\n\t\t\t'h6',\n\t\t\t'address',\n\t\t\t'article',\n\t\t\t'aside',\n\t\t\t'section',\n\t\t\t'div',\n\t\t\t'header',\n\t\t\t'footer',\n\t\t],\n\t\tself: false,\n\t},\n\taudio: {\n\t\tchildren: ['track', 'source'],\n\t},\n\tbr: {\n\t\ttype: TYPE_FLOW | TYPE_PHRASING,\n\t\tvoid: true,\n\t},\n\tbody: {\n\t\tcontent:\n\t\t\tTYPE_FLOW |\n\t\t\tTYPE_SECTION |\n\t\t\tTYPE_HEADING |\n\t\t\tTYPE_PHRASING |\n\t\t\tTYPE_EMBEDDED |\n\t\t\tTYPE_INTERACTIVE |\n\t\t\tTYPE_PALPABLE,\n\t},\n\tbutton: {\n\t\tcontent: TYPE_PHRASING,\n\t\ttype: TYPE_FLOW | TYPE_PHRASING | TYPE_INTERACTIVE | TYPE_PALPABLE,\n\t},\n\tcaption: {\n\t\tcontent: TYPE_FLOW,\n\t\tparent: ['table'],\n\t},\n\tcol: {\n\t\tparent: ['colgroup'],\n\t\tvoid: true,\n\t},\n\tcolgroup: {\n\t\tchildren: ['col'],\n\t\tparent: ['table'],\n\t},\n\tdetails: {\n\t\tchildren: ['summary'],\n\t\ttype: TYPE_FLOW | TYPE_INTERACTIVE | TYPE_PALPABLE,\n\t},\n\tdd: {\n\t\tcontent: TYPE_FLOW,\n\t\tparent: ['dl'],\n\t},\n\tdl: {\n\t\tchildren: ['dt', 'dd'],\n\t\ttype: TYPE_FLOW,\n\t},\n\tdt: {\n\t\tcontent: TYPE_FLOW,\n\t\tinvalid: ['footer', 'header'],\n\t\tparent: ['dl'],\n\t},\n\tfigcaption: {\n\t\tcontent: TYPE_FLOW,\n\t\tparent: ['figure'],\n\t},\n\tfooter: {\n\t\tinvalid: ['footer', 'header'],\n\t},\n\theader: {\n\t\tinvalid: ['footer', 'header'],\n\t},\n\thr: {\n\t\ttype: TYPE_FLOW,\n\t\tvoid: true,\n\t},\n\timg: {\n\t\tvoid: true,\n\t},\n\tli: {\n\t\tcontent: TYPE_FLOW,\n\t\tparent: ['ul', 'ol', 'menu'],\n\t},\n\tmain: {\n\t\tself: false,\n\t},\n\tol: {\n\t\tchildren: ['li'],\n\t\ttype: TYPE_FLOW,\n\t},\n\tpicture: {\n\t\tchildren: ['source', 'img'],\n\t\ttype: TYPE_FLOW | TYPE_PHRASING | TYPE_EMBEDDED,\n\t},\n\trb: {\n\t\tparent: ['ruby', 'rtc'],\n\t},\n\trp: {\n\t\tparent: ['ruby', 'rtc'],\n\t},\n\trt: {\n\t\tcontent: TYPE_PHRASING,\n\t\tparent: ['ruby', 'rtc'],\n\t},\n\trtc: {\n\t\tcontent: TYPE_PHRASING,\n\t\tparent: ['ruby'],\n\t},\n\truby: {\n\t\tchildren: ['rb', 'rp', 'rt', 'rtc'],\n\t},\n\tsource: {\n\t\tparent: ['audio', 'video', 'picture'],\n\t\tvoid: true,\n\t},\n\tsummary: {\n\t\tcontent: TYPE_PHRASING,\n\t\tparent: ['details'],\n\t},\n\ttable: {\n\t\tchildren: ['caption', 'colgroup', 'thead', 'tbody', 'tfoot', 'tr'],\n\t\ttype: TYPE_FLOW,\n\t},\n\ttbody: {\n\t\tparent: ['table'],\n\t\tchildren: ['tr'],\n\t},\n\ttd: {\n\t\tcontent: TYPE_FLOW,\n\t\tparent: ['tr'],\n\t},\n\ttfoot: {\n\t\tparent: ['table'],\n\t\tchildren: ['tr'],\n\t},\n\tth: {\n\t\tcontent: TYPE_FLOW,\n\t\tparent: ['tr'],\n\t},\n\tthead: {\n\t\tparent: ['table'],\n\t\tchildren: ['tr'],\n\t},\n\ttr: {\n\t\tparent: ['table', 'tbody', 'thead', 'tfoot'],\n\t\tchildren: ['th', 'td'],\n\t},\n\ttrack: {\n\t\tparent: ['audio', 'video'],\n\t\tvoid: true,\n\t},\n\tul: {\n\t\tchildren: ['li'],\n\t\ttype: TYPE_FLOW,\n\t},\n\tvideo: {\n\t\tchildren: ['track', 'source'],\n\t},\n\twbr: {\n\t\ttype: TYPE_FLOW | TYPE_PHRASING,\n\t\tvoid: true,\n\t},\n};\n\nfunction createConfigBuilder(config: Partial<NodeConfig>): (tagName: string) => void {\n\treturn (tagName: string) => {\n\t\ttagConfigs[tagName] = {\n\t\t\t...config,\n\t\t\t...tagConfigs[tagName],\n\t\t};\n\t};\n}\n\n['address', 'main', 'div', 'figure', 'p', 'pre'].forEach(\n\tcreateConfigBuilder({\n\t\tcontent: TYPE_FLOW,\n\t\ttype: TYPE_FLOW | TYPE_PALPABLE,\n\t}),\n);\n\n[\n\t'abbr',\n\t'b',\n\t'bdi',\n\t'bdo',\n\t'cite',\n\t'code',\n\t'data',\n\t'dfn',\n\t'em',\n\t'i',\n\t'kbd',\n\t'mark',\n\t'q',\n\t'ruby',\n\t'samp',\n\t'strong',\n\t'sub',\n\t'sup',\n\t'time',\n\t'u',\n\t'var',\n].forEach(\n\tcreateConfigBuilder({\n\t\tcontent: TYPE_PHRASING,\n\t\ttype: TYPE_FLOW | TYPE_PHRASING | TYPE_PALPABLE,\n\t}),\n);\n\n['p', 'pre'].forEach(\n\tcreateConfigBuilder({\n\t\tcontent: TYPE_PHRASING,\n\t\ttype: TYPE_FLOW | TYPE_PALPABLE,\n\t}),\n);\n\n['s', 'small', 'span', 'del', 'ins'].forEach(\n\tcreateConfigBuilder({\n\t\tcontent: TYPE_PHRASING,\n\t\ttype: TYPE_FLOW | TYPE_PHRASING,\n\t}),\n);\n\n['article', 'aside', 'footer', 'header', 'nav', 'section', 'blockquote'].forEach(\n\tcreateConfigBuilder({\n\t\tcontent: TYPE_FLOW,\n\t\ttype: TYPE_FLOW | TYPE_SECTION | TYPE_PALPABLE,\n\t}),\n);\n\n['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].forEach(\n\tcreateConfigBuilder({\n\t\tcontent: TYPE_PHRASING,\n\t\ttype: TYPE_FLOW | TYPE_HEADING | TYPE_PALPABLE,\n\t}),\n);\n\n['audio', 'canvas', 'iframe', 'img', 'video'].forEach(\n\tcreateConfigBuilder({\n\t\ttype: TYPE_FLOW | TYPE_PHRASING | TYPE_EMBEDDED | TYPE_PALPABLE,\n\t}),\n);\n\n// Disable this map from being modified\nexport const TAGS: ConfigMap = Object.freeze(tagConfigs);\n\n// Tags that should never be allowed, even if the allow list is disabled\nexport const BANNED_TAG_LIST = [\n\t'applet',\n\t'base',\n\t'body',\n\t'command',\n\t'embed',\n\t'frame',\n\t'frameset',\n\t'head',\n\t'html',\n\t'link',\n\t'meta',\n\t'noscript',\n\t'object',\n\t'script',\n\t'style',\n\t'title',\n];\n\nexport const ALLOWED_TAG_LIST = Object.keys(TAGS).filter(\n\t(tag) => tag !== 'canvas' && tag !== 'iframe',\n);\n\n// Filters apply to HTML attributes\nexport const FILTER_ALLOW = 1;\nexport const FILTER_DENY = 2;\nexport const FILTER_CAST_NUMBER = 3;\nexport const FILTER_CAST_BOOL = 4;\nexport const FILTER_NO_CAST = 5;\n\n// Attributes not listed here will be denied\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\nexport const ATTRIBUTES: FilterMap = Object.freeze({\n\talt: FILTER_ALLOW,\n\tcite: FILTER_ALLOW,\n\tclass: FILTER_ALLOW,\n\tcolspan: FILTER_CAST_NUMBER,\n\tcontrols: FILTER_CAST_BOOL,\n\tdatetime: FILTER_ALLOW,\n\tdefault: FILTER_CAST_BOOL,\n\tdisabled: FILTER_CAST_BOOL,\n\tdir: FILTER_ALLOW,\n\theight: FILTER_ALLOW,\n\thref: FILTER_ALLOW,\n\tid: FILTER_ALLOW,\n\tkind: FILTER_ALLOW,\n\tlabel: FILTER_ALLOW,\n\tlang: FILTER_ALLOW,\n\tloading: FILTER_ALLOW,\n\tloop: FILTER_CAST_BOOL,\n\tmedia: FILTER_ALLOW,\n\tmuted: FILTER_CAST_BOOL,\n\tposter: FILTER_ALLOW,\n\trel: FILTER_ALLOW,\n\trole: FILTER_ALLOW,\n\trowspan: FILTER_CAST_NUMBER,\n\tscope: FILTER_ALLOW,\n\tsizes: FILTER_ALLOW,\n\tspan: FILTER_CAST_NUMBER,\n\tstart: FILTER_CAST_NUMBER,\n\tstyle: FILTER_NO_CAST,\n\tsrc: FILTER_ALLOW,\n\tsrclang: FILTER_ALLOW,\n\tsrcset: FILTER_ALLOW,\n\ttarget: FILTER_ALLOW,\n\ttitle: FILTER_ALLOW,\n\ttype: FILTER_ALLOW,\n\twidth: FILTER_ALLOW,\n});\n\n// Attributes to camel case for React props\nexport const ATTRIBUTES_TO_PROPS: Record<string, string> = Object.freeze({\n\tclass: 'className',\n\tcolspan: 'colSpan',\n\tdatetime: 'dateTime',\n\trowspan: 'rowSpan',\n\tsrclang: 'srcLang',\n\tsrcset: 'srcSet',\n});\n","import React from 'react';\nimport { ElementProps } from './types';\n\nexport function Element({\n\tattributes = {},\n\tclassName,\n\tchildren = null,\n\tselfClose = false,\n\ttagName,\n}: ElementProps) {\n\tconst Tag = tagName as 'span';\n\n\treturn selfClose ? (\n\t\t<Tag className={className} {...attributes} />\n\t) : (\n\t\t<Tag className={className} {...attributes}>\n\t\t\t{children}\n\t\t</Tag>\n\t);\n}\n","import { ElementAttributes, FilterInterface } from './types';\n\nexport class Filter implements FilterInterface {\n\t/**\n\t * Filter and clean an HTML attribute value.\n\t */\n\tattribute<K extends keyof ElementAttributes>(\n\t\tname: K,\n\t\tvalue: ElementAttributes[K],\n\t): ElementAttributes[K] | null | undefined {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn value;\n\t}\n\n\t/**\n\t * Filter and clean an HTML node.\n\t */\n\tnode(name: string, node: HTMLElement): HTMLElement | null {\n\t\treturn node;\n\t}\n}\n","import { Filter } from './Filter';\nimport { ElementAttributes } from './types';\n\nconst INVALID_STYLES = /(url|image|image-set)\\(/i;\n\nexport class StyleFilter extends Filter {\n\toverride attribute<K extends keyof ElementAttributes>(\n\t\tname: K,\n\t\tvalue: ElementAttributes[K],\n\t): ElementAttributes[K] {\n\t\tif (name === 'style') {\n\t\t\tObject.keys(value).forEach((key) => {\n\t\t\t\tif (String(value[key]).match(INVALID_STYLES)) {\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\tdelete value[key];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn value;\n\t}\n}\n","/* eslint-disable no-bitwise, no-cond-assign, complexity, @typescript-eslint/no-unsafe-return */\n\nimport React from 'react';\nimport escapeHtml from 'escape-html';\nimport {\n\tALLOWED_TAG_LIST,\n\tATTRIBUTES,\n\tATTRIBUTES_TO_PROPS,\n\tBANNED_TAG_LIST,\n\tFILTER_CAST_BOOL,\n\tFILTER_CAST_NUMBER,\n\tFILTER_DENY,\n\tFILTER_NO_CAST,\n\tTAGS,\n} from './constants';\nimport { Element } from './Element';\nimport { StyleFilter } from './StyleFilter';\nimport {\n\tAttributes,\n\tAttributeValue,\n\tChildrenNode,\n\tElementAttributes,\n\tElementProps,\n\tFilterInterface,\n\tMatcherElementsMap,\n\tMatcherInterface,\n\tNode,\n\tNodeConfig,\n\tParserProps,\n} from './types';\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst INVALID_ROOTS = /^<(!doctype|(html|head|body)(\\s|>))/i;\nconst ALLOWED_ATTRS = /^(aria-|data-|\\w+:)/iu;\nconst OPEN_TOKEN = /{{{(\\w+)\\/?}}}/;\n\nfunction createDocument() {\n\t// Maybe SSR? Just do nothing instead of crashing!\n\tif (typeof window === 'undefined' || typeof document === 'undefined') {\n\t\treturn undefined;\n\t}\n\n\treturn document.implementation.createHTMLDocument('Interweave');\n}\n\nexport class Parser {\n\tallowed: Set<string>;\n\n\tbanned: Set<string>;\n\n\tblocked: Set<string>;\n\n\tcontainer?: HTMLElement;\n\n\tcontent: Node[] = [];\n\n\tprops: ParserProps;\n\n\tmatchers: MatcherInterface[];\n\n\tfilters: FilterInterface[];\n\n\tkeyIndex: number;\n\n\tconstructor(\n\t\tmarkup: string,\n\t\tprops: ParserProps = {},\n\t\tmatchers: MatcherInterface[] = [],\n\t\tfilters: FilterInterface[] = [],\n\t) {\n\t\tif (__DEV__ && markup && typeof markup !== 'string') {\n\t\t\tthrow new TypeError('Interweave parser requires a valid string.');\n\t\t}\n\n\t\tthis.props = props;\n\t\tthis.matchers = matchers;\n\t\tthis.filters = [...filters, new StyleFilter()];\n\t\tthis.keyIndex = -1;\n\t\tthis.container = this.createContainer(markup || '');\n\t\tthis.allowed = new Set(props.allowList ?? ALLOWED_TAG_LIST);\n\t\tthis.banned = new Set(BANNED_TAG_LIST);\n\t\tthis.blocked = new Set(props.blockList);\n\t}\n\n\t/**\n\t * Loop through and apply all registered attribute filters.\n\t */\n\tapplyAttributeFilters<K extends keyof ElementAttributes>(\n\t\tname: K,\n\t\tvalue: ElementAttributes[K],\n\t): ElementAttributes[K] {\n\t\treturn this.filters.reduce(\n\t\t\t(nextValue, filter) =>\n\t\t\t\tnextValue !== null && typeof filter.attribute === 'function'\n\t\t\t\t\t? filter.attribute(name, nextValue)\n\t\t\t\t\t: nextValue,\n\t\t\tvalue,\n\t\t);\n\t}\n\n\t/**\n\t * Loop through and apply all registered node filters.\n\t */\n\tapplyNodeFilters(name: string, node: HTMLElement | null): HTMLElement | null {\n\t\t// Allow null to be returned\n\t\treturn this.filters.reduce(\n\t\t\t(nextNode, filter) =>\n\t\t\t\tnextNode !== null && typeof filter.node === 'function'\n\t\t\t\t\t? filter.node(name, nextNode)\n\t\t\t\t\t: nextNode,\n\t\t\tnode,\n\t\t);\n\t}\n\n\t/**\n\t * Loop through and apply all registered matchers to the string.\n\t * If a match is found, create a React element, and build a new array.\n\t * This array allows React to interpolate and render accordingly.\n\t */\n\tapplyMatchers(string: string, parentConfig: NodeConfig): ChildrenNode {\n\t\tconst elements: MatcherElementsMap = {};\n\t\tconst { props } = this;\n\t\tlet matchedString = string;\n\t\tlet elementIndex = 0;\n\t\tlet parts = null;\n\n\t\tthis.matchers.forEach((matcher) => {\n\t\t\tconst tagName = matcher.asTag().toLowerCase();\n\t\t\tconst config = this.getTagConfig(tagName);\n\n\t\t\t// Skip matchers that have been disabled from props or are not supported\n\t\t\tif ((props as Record<string, unknown>)[matcher.inverseName] || !this.isTagAllowed(tagName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip matchers in which the child cannot be rendered\n\t\t\tif (!this.canRenderChild(parentConfig, config)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Continuously trigger the matcher until no matches are found\n\t\t\tlet tokenizedString = '';\n\n\t\t\twhile (matchedString && (parts = matcher.match(matchedString))) {\n\t\t\t\tconst { index, length, match, valid, void: isVoid, ...partProps } = parts;\n\t\t\t\tconst tokenName = matcher.propName + String(elementIndex);\n\n\t\t\t\t// Piece together a new string with interpolated tokens\n\t\t\t\tif (index > 0) {\n\t\t\t\t\ttokenizedString += matchedString.slice(0, index);\n\t\t\t\t}\n\n\t\t\t\tif (valid) {\n\t\t\t\t\ttokenizedString += isVoid\n\t\t\t\t\t\t? `{{{${tokenName}/}}}`\n\t\t\t\t\t\t: `{{{${tokenName}}}}${match}{{{/${tokenName}}}}`;\n\n\t\t\t\t\tthis.keyIndex += 1;\n\n\t\t\t\t\telementIndex += 1;\n\t\t\t\t\telements[tokenName] = {\n\t\t\t\t\t\tchildren: match,\n\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t...props,\n\t\t\t\t\t\t\t...partProps,\n\t\t\t\t\t\t\tkey: this.keyIndex,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\ttokenizedString += match;\n\t\t\t\t}\n\n\t\t\t\t// Reduce the string being matched against,\n\t\t\t\t// otherwise we end up in an infinite loop!\n\t\t\t\tif (matcher.greedy) {\n\t\t\t\t\tmatchedString = tokenizedString + matchedString.slice(index + length);\n\t\t\t\t\ttokenizedString = '';\n\t\t\t\t} else {\n\t\t\t\t\t// eslint-disable-next-line unicorn/explicit-length-check\n\t\t\t\t\tmatchedString = matchedString.slice(index + (length || match.length));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update the matched string with the tokenized string,\n\t\t\t// so that the next matcher can apply to it.\n\t\t\tif (!matcher.greedy) {\n\t\t\t\tmatchedString = tokenizedString + matchedString;\n\t\t\t}\n\t\t});\n\n\t\tif (elementIndex === 0) {\n\t\t\treturn string;\n\t\t}\n\n\t\treturn this.replaceTokens(matchedString, elements);\n\t}\n\n\t/**\n\t * Determine whether the child can be rendered within the parent.\n\t */\n\tcanRenderChild(parentConfig: NodeConfig, childConfig: NodeConfig): boolean {\n\t\tif (!parentConfig.tagName || !childConfig.tagName) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// No children\n\t\tif (parentConfig.void) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Valid children\n\t\tif (parentConfig.children.length > 0) {\n\t\t\treturn parentConfig.children.includes(childConfig.tagName);\n\t\t}\n\n\t\tif (parentConfig.invalid.length > 0 && parentConfig.invalid.includes(childConfig.tagName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Valid parent\n\t\tif (childConfig.parent.length > 0) {\n\t\t\treturn childConfig.parent.includes(parentConfig.tagName);\n\t\t}\n\n\t\t// Self nesting\n\t\tif (!parentConfig.self && parentConfig.tagName === childConfig.tagName) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Content category type\n\t\treturn Boolean(parentConfig && parentConfig.content & childConfig.type);\n\t}\n\n\t/**\n\t * Convert line breaks in a string to HTML `<br/>` tags.\n\t * If the string contains HTML, we should not convert anything,\n\t * as line breaks should be handled by `<br/>`s in the markup itself.\n\t */\n\tconvertLineBreaks(markup: string): string {\n\t\tconst { noHtml, disableLineBreaks } = this.props;\n\n\t\tif (noHtml || disableLineBreaks || markup.match(/<((?:\\/[ a-z]+)|(?:[ a-z]+\\/))>/gi)) {\n\t\t\treturn markup;\n\t\t}\n\n\t\t// Replace carriage returns\n\t\tlet nextMarkup = markup.replace(/\\r\\n/g, '\\n');\n\n\t\t// Replace long line feeds\n\t\tnextMarkup = nextMarkup.replace(/\\n{3,}/g, '\\n\\n\\n');\n\n\t\t// Replace line feeds with `<br/>`s\n\t\tnextMarkup = nextMarkup.replace(/\\n/g, '<br/>');\n\n\t\treturn nextMarkup;\n\t}\n\n\t/**\n\t * Create a detached HTML document that allows for easy HTML\n\t * parsing while not triggering scripts or loading external\n\t * resources.\n\t */\n\tcreateContainer(markup: string): HTMLElement | undefined {\n\t\tconst factory =\n\t\t\t(typeof global !== 'undefined' && global.INTERWEAVE_SSR_POLYFILL) || createDocument;\n\t\tconst doc = factory();\n\n\t\tif (!doc) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst tag = this.props.containerTagName ?? 'body';\n\t\tconst el = tag === 'body' || tag === 'fragment' ? doc.body : doc.createElement(tag);\n\n\t\tif (markup.match(INVALID_ROOTS)) {\n\t\t\tif (__DEV__) {\n\t\t\t\tthrow new Error('HTML documents as Interweave content are not supported.');\n\t\t\t}\n\t\t} else {\n\t\t\tel.innerHTML = this.convertLineBreaks(this.props.escapeHtml ? escapeHtml(markup) : markup);\n\t\t}\n\n\t\treturn el;\n\t}\n\n\t/**\n\t * Convert an elements attribute map to an object map.\n\t * Returns null if no attributes are defined.\n\t */\n\textractAttributes(node: HTMLElement): Attributes | null {\n\t\tconst { allowAttributes } = this.props;\n\t\tconst attributes: Attributes = {};\n\t\tlet count = 0;\n\n\t\tif (node.nodeType !== ELEMENT_NODE || !node.attributes) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// @ts-expect-error Cant type iterator\n\t\t[...node.attributes].forEach((attr: Attr) => {\n\t\t\tconst { name, value } = attr;\n\t\t\tconst newName = name.toLowerCase();\n\t\t\tconst filter = ATTRIBUTES[newName] || ATTRIBUTES[name];\n\n\t\t\t// Verify the node is safe from attacks\n\t\t\tif (!this.isSafe(node)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Do not allow denied attributes, excluding ARIA attributes\n\t\t\t// Do not allow events or XSS injections\n\t\t\tif (\n\t\t\t\t!newName.match(ALLOWED_ATTRS) &&\n\t\t\t\t((!allowAttributes && (!filter || filter === FILTER_DENY)) ||\n\t\t\t\t\tnewName.startsWith('on') ||\n\t\t\t\t\tvalue.replace(/(\\s|\\0|&#x0([9AD]);)/, '').match(/(javascript|vbscript|livescript|xss):/i))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Apply attribute filters\n\t\t\tlet newValue: AttributeValue = newName === 'style' ? this.extractStyleAttribute(node) : value;\n\n\t\t\t// Cast to boolean\n\t\t\tif (filter === FILTER_CAST_BOOL) {\n\t\t\t\tnewValue = true;\n\n\t\t\t\t// Cast to number\n\t\t\t} else if (filter === FILTER_CAST_NUMBER) {\n\t\t\t\tnewValue = Number.parseFloat(String(newValue));\n\n\t\t\t\t// Cast to string\n\t\t\t} else if (filter !== FILTER_NO_CAST) {\n\t\t\t\tnewValue = String(newValue);\n\t\t\t}\n\n\t\t\tattributes[ATTRIBUTES_TO_PROPS[newName] || newName] = this.applyAttributeFilters(\n\t\t\t\tnewName as keyof ElementAttributes,\n\t\t\t\tnewValue,\n\t\t\t) as AttributeValue;\n\t\t\tcount += 1;\n\t\t});\n\n\t\tif (count === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\t/**\n\t * Extract the style attribute as an object and remove values that allow for attack vectors.\n\t */\n\textractStyleAttribute(node: HTMLElement): object {\n\t\tconst styles: Record<string, number | string> = {};\n\n\t\t// eslint-disable-next-line unicorn/prefer-spread\n\t\tArray.from(node.style).forEach((key) => {\n\t\t\tconst value = node.style[key as keyof CSSStyleDeclaration];\n\n\t\t\tif (typeof value === 'string' || typeof value === 'number') {\n\t\t\t\tstyles[key.replace(/-([a-z])/g, (match, letter) => String(letter).toUpperCase())] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn styles;\n\t}\n\n\t/**\n\t * Return configuration for a specific tag.\n\t */\n\tgetTagConfig(tagName: string): NodeConfig {\n\t\tconst common = {\n\t\t\tchildren: [],\n\t\t\tcontent: 0,\n\t\t\tinvalid: [],\n\t\t\tparent: [],\n\t\t\tself: true,\n\t\t\ttagName: '',\n\t\t\ttype: 0,\n\t\t\tvoid: false,\n\t\t};\n\n\t\t// Only spread when a tag config exists,\n\t\t// otherwise we use the empty `tagName`\n\t\t// for parent config inheritance.\n\t\tif (TAGS[tagName]) {\n\t\t\treturn {\n\t\t\t\t...common,\n\t\t\t\t...TAGS[tagName],\n\t\t\t\ttagName,\n\t\t\t};\n\t\t}\n\n\t\treturn common;\n\t}\n\n\t/**\n\t * Verify that a node is safe from XSS and injection attacks.\n\t */\n\tisSafe(node: HTMLElement): boolean {\n\t\t// URLs should only support HTTP, email and phone numbers\n\t\tif (typeof HTMLAnchorElement !== 'undefined' && node instanceof HTMLAnchorElement) {\n\t\t\tconst href = node.getAttribute('href');\n\n\t\t\t// Fragment protocols start with about:\n\t\t\t// So let's just allow them\n\t\t\tif (href?.startsWith('#')) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst protocol = node.protocol.toLowerCase();\n\n\t\t\treturn (\n\t\t\t\tprotocol === ':' ||\n\t\t\t\tprotocol === 'http:' ||\n\t\t\t\tprotocol === 'https:' ||\n\t\t\t\tprotocol === 'mailto:' ||\n\t\t\t\tprotocol === 'tel:'\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Verify that an HTML tag is allowed to render.\n\t */\n\tisTagAllowed(tagName: string): boolean {\n\t\tif (this.banned.has(tagName) || this.blocked.has(tagName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\treturn this.props.allowElements || this.allowed.has(tagName);\n\t}\n\n\t/**\n\t * Parse the markup by injecting it into a detached document,\n\t * while looping over all child nodes and generating an\n\t * array to interpolate into JSX.\n\t */\n\tparse(): Node[] {\n\t\tif (!this.container) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.parseNode(this.container, this.getTagConfig(this.container.nodeName.toLowerCase()));\n\t}\n\n\t/**\n\t * Loop over the nodes children and generate a\n\t * list of text nodes and React elements.\n\t */\n\tparseNode(parentNode: HTMLElement, parentConfig: NodeConfig): Node[] {\n\t\tconst {\n\t\t\tnoHtml,\n\t\t\tnoHtmlExceptMatchers,\n\t\t\tallowElements,\n\t\t\ttransform,\n\t\t\ttransformOnlyAllowList,\n\t\t} = this.props;\n\t\tlet content: Node[] = [];\n\t\tlet mergedText = '';\n\n\t\t// @ts-expect-error Cant type iterator\n\t\t[...parentNode.childNodes].forEach((node: ChildNode) => {\n\t\t\t// Create React elements from HTML elements\n\t\t\tif (node.nodeType === ELEMENT_NODE) {\n\t\t\t\tconst tagName = node.nodeName.toLowerCase();\n\t\t\t\tconst config = this.getTagConfig(tagName);\n\n\t\t\t\t// Persist any previous text\n\t\t\t\tif (mergedText) {\n\t\t\t\t\tcontent.push(mergedText);\n\t\t\t\t\tmergedText = '';\n\t\t\t\t}\n\n\t\t\t\t// Apply node filters first\n\t\t\t\tconst nextNode = this.applyNodeFilters(tagName, node as HTMLElement);\n\n\t\t\t\tif (!nextNode) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Apply transformation second\n\t\t\t\tlet children;\n\n\t\t\t\tif (transform && !(transformOnlyAllowList && !this.isTagAllowed(tagName))) {\n\t\t\t\t\tthis.keyIndex += 1;\n\t\t\t\t\tconst key = this.keyIndex;\n\n\t\t\t\t\t// Must occur after key is set\n\t\t\t\t\tchildren = this.parseNode(nextNode, config);\n\n\t\t\t\t\tconst transformed = transform(nextNode, children, config);\n\n\t\t\t\t\tif (transformed === null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof transformed !== 'undefined') {\n\t\t\t\t\t\tcontent.push(React.cloneElement(transformed as React.ReactElement<unknown>, { key }));\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset as we're not using the transformation\n\t\t\t\t\tthis.keyIndex = key - 1;\n\t\t\t\t}\n\n\t\t\t\t// Never allow these tags (except via a transformer)\n\t\t\t\tif (this.banned.has(tagName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Only render when the following criteria is met:\n\t\t\t\t//  - HTML has not been disabled\n\t\t\t\t//  - Tag is allowed\n\t\t\t\t//  - Child is valid within the parent\n\t\t\t\tif (\n\t\t\t\t\t!(noHtml || (noHtmlExceptMatchers && tagName !== 'br')) &&\n\t\t\t\t\tthis.isTagAllowed(tagName) &&\n\t\t\t\t\t(allowElements || this.canRenderChild(parentConfig, config))\n\t\t\t\t) {\n\t\t\t\t\tthis.keyIndex += 1;\n\n\t\t\t\t\t// Build the props as it makes it easier to test\n\t\t\t\t\tconst attributes = this.extractAttributes(nextNode);\n\t\t\t\t\tconst elementProps: ElementProps = {\n\t\t\t\t\t\ttagName,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (attributes) {\n\t\t\t\t\t\telementProps.attributes = attributes;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (config.void) {\n\t\t\t\t\t\telementProps.selfClose = config.void;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent.push(\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\tElement,\n\t\t\t\t\t\t\t{ ...elementProps, key: this.keyIndex },\n\t\t\t\t\t\t\tchildren ?? this.parseNode(nextNode, config),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\t// Render the children of the current element only.\n\t\t\t\t\t// Important: If the current element is not allowed,\n\t\t\t\t\t// use the parent element for the next scope.\n\t\t\t\t} else {\n\t\t\t\t\tcontent = [\n\t\t\t\t\t\t...content,\n\t\t\t\t\t\t...this.parseNode(nextNode, config.tagName ? config : parentConfig),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t// Apply matchers if a text node\n\t\t\t} else if (node.nodeType === TEXT_NODE) {\n\t\t\t\tconst text =\n\t\t\t\t\tnoHtml && !noHtmlExceptMatchers\n\t\t\t\t\t\t? node.textContent\n\t\t\t\t\t\t: // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\t\t\t\t  this.applyMatchers(node.textContent || '', parentConfig);\n\n\t\t\t\tif (Array.isArray(text)) {\n\t\t\t\t\tcontent = [...content, ...text];\n\t\t\t\t} else {\n\t\t\t\t\tmergedText += text!;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (mergedText) {\n\t\t\tcontent.push(mergedText);\n\t\t}\n\n\t\treturn content;\n\t}\n\n\t/**\n\t * Deconstruct the string into an array, by replacing custom tokens with React elements,\n\t * so that React can render it correctly.\n\t */\n\treplaceTokens(tokenizedString: string, elements: MatcherElementsMap): ChildrenNode {\n\t\tif (!tokenizedString.includes('{{{')) {\n\t\t\treturn tokenizedString;\n\t\t}\n\n\t\tconst nodes: Node[] = [];\n\t\tlet text = tokenizedString;\n\t\tlet open: RegExpMatchArray | null = null;\n\n\t\t// Find an open token tag\n\t\twhile ((open = text.match(OPEN_TOKEN))) {\n\t\t\tconst [match, tokenName] = open;\n\t\t\tconst startIndex = open.index!;\n\t\t\tconst isVoid = match.includes('/');\n\n\t\t\tif (__DEV__ && !elements[tokenName]) {\n\t\t\t\tthrow new Error(`Token \"${tokenName}\" found but no matching element to replace with.`);\n\t\t\t}\n\n\t\t\t// Extract the previous non-token text\n\t\t\tif (startIndex > 0) {\n\t\t\t\tnodes.push(text.slice(0, startIndex));\n\n\t\t\t\t// Reduce text so that the closing tag will be found after the opening\n\t\t\t\ttext = text.slice(startIndex);\n\t\t\t}\n\n\t\t\tconst { children, matcher, props: elementProps } = elements[tokenName];\n\t\t\tlet endIndex: number;\n\n\t\t\t// Use tag as-is if void\n\t\t\tif (isVoid) {\n\t\t\t\tendIndex = match.length;\n\n\t\t\t\tnodes.push(matcher.createElement(children, elementProps));\n\n\t\t\t\t// Find the closing tag if not void\n\t\t\t} else {\n\t\t\t\tconst close = text.match(new RegExp(`{{{/${tokenName}}}}`))!;\n\n\t\t\t\tif (__DEV__ && !close) {\n\t\t\t\t\tthrow new Error(`Closing token missing for interpolated element \"${tokenName}\".`);\n\t\t\t\t}\n\n\t\t\t\tendIndex = close.index! + close[0].length;\n\n\t\t\t\tnodes.push(\n\t\t\t\t\tmatcher.createElement(\n\t\t\t\t\t\tthis.replaceTokens(text.slice(match.length, close.index), elements),\n\t\t\t\t\t\telementProps,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Reduce text for the next interation\n\t\t\ttext = text.slice(endIndex);\n\t\t}\n\n\t\t// Extra the remaining text\n\t\tif (text.length > 0) {\n\t\t\tnodes.push(text);\n\t\t}\n\n\t\t// Reduce to a string if possible\n\t\tif (nodes.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tif (nodes.length === 1 && typeof nodes[0] === 'string') {\n\t\t\treturn nodes[0];\n\t\t}\n\n\t\treturn nodes;\n\t}\n}\n","/* eslint-disable react/jsx-fragments */\n\nimport React from 'react';\nimport { Element } from './Element';\nimport { Parser } from './Parser';\nimport { MarkupProps } from './types';\n\nexport function Markup(props: MarkupProps) {\n\tconst {\n\t\tattributes,\n\t\tclassName,\n\t\tcontainerTagName,\n\t\tcontent,\n\t\temptyContent,\n\t\tparsedContent,\n\t\ttagName,\n\t\tnoWrap: baseNoWrap,\n\t} = props;\n\tconst tag = containerTagName ?? tagName ?? 'span';\n\tconst noWrap = tag === 'fragment' ? true : baseNoWrap;\n\tlet mainContent;\n\n\tif (parsedContent) {\n\t\tmainContent = parsedContent;\n\t} else {\n\t\tconst markup = new Parser(content ?? '', props).parse();\n\n\t\tif (markup.length > 0) {\n\t\t\tmainContent = markup;\n\t\t}\n\t}\n\n\tif (!mainContent) {\n\t\tmainContent = emptyContent;\n\t}\n\n\tif (noWrap) {\n\t\t// eslint-disable-next-line react/jsx-no-useless-fragment\n\t\treturn <React.Fragment>{mainContent}</React.Fragment>;\n\t}\n\n\treturn (\n\t\t<Element attributes={attributes} className={className} tagName={tag}>\n\t\t\t{mainContent}\n\t\t</Element>\n\t);\n}\n","/* eslint-disable promise/prefer-await-to-callbacks */\nimport React from 'react';\nimport { Markup } from './Markup';\nimport { Parser } from './Parser';\nimport { InterweaveProps } from './types';\n\nexport function Interweave(props: InterweaveProps) {\n\tconst {\n\t\tattributes,\n\t\tclassName,\n\t\tcontent = '',\n\t\tdisableFilters = false,\n\t\tdisableMatchers = false,\n\t\temptyContent = null,\n\t\tfilters = [],\n\t\tmatchers = [],\n\t\tonAfterParse = null,\n\t\tonBeforeParse = null,\n\t\ttagName = 'span',\n\t\tnoWrap = false,\n\t\t...parserProps\n\t} = props;\n\tconst allMatchers = disableMatchers ? [] : matchers;\n\tconst allFilters = disableFilters ? [] : filters;\n\tconst beforeCallbacks = onBeforeParse ? [onBeforeParse] : [];\n\tconst afterCallbacks = onAfterParse ? [onAfterParse] : [];\n\n\t// Inherit callbacks from matchers\n\tallMatchers.forEach((matcher) => {\n\t\tif (matcher.onBeforeParse) {\n\t\t\tbeforeCallbacks.push(matcher.onBeforeParse.bind(matcher));\n\t\t}\n\n\t\tif (matcher.onAfterParse) {\n\t\t\tafterCallbacks.push(matcher.onAfterParse.bind(matcher));\n\t\t}\n\t});\n\n\t// Trigger before callbacks\n\tconst markup = beforeCallbacks.reduce((string, callback) => {\n\t\tconst nextString = callback(string, props);\n\n\t\tif (__DEV__ && typeof nextString !== 'string') {\n\t\t\tthrow new TypeError('Interweave `onBeforeParse` must return a valid HTML string.');\n\t\t}\n\n\t\treturn nextString;\n\t}, content ?? '');\n\n\t// Parse the markup\n\tconst parser = new Parser(markup, parserProps, allMatchers, allFilters);\n\n\t// Trigger after callbacks\n\tconst nodes = afterCallbacks.reduce((parserNodes, callback) => {\n\t\tconst nextNodes = callback(parserNodes, props);\n\n\t\tif (__DEV__ && !Array.isArray(nextNodes)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'Interweave `onAfterParse` must return an array of strings and React elements.',\n\t\t\t);\n\t\t}\n\n\t\treturn nextNodes;\n\t}, parser.parse());\n\n\treturn (\n\t\t<Markup\n\t\t\tattributes={attributes}\n\t\t\tclassName={className}\n\t\t\t// eslint-disable-next-line react/destructuring-assignment\n\t\t\tcontainerTagName={props.containerTagName}\n\t\t\temptyContent={emptyContent}\n\t\t\tnoWrap={noWrap}\n\t\t\tparsedContent={nodes.length === 0 ? undefined : nodes}\n\t\t\ttagName={tagName}\n\t\t/>\n\t);\n}\n","import styled from 'styled-components';\r\nimport { css } from 'styled-components';\r\n\r\nexport const GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 0.0828fr 1fr;\r\n  gap: 40px;\r\n`;\r\n\r\nexport const SideImagesList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const SideImage = styled.img`\r\n  object-fit: scale-down;\r\n  height: 80px;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const DescriptionSection = styled.section`\r\n  display: grid;\r\n\r\n  grid-template-columns: 610px auto;\r\n  gap: 100px;\r\n`;\r\n\r\nexport const ActiveImage = styled.img`\r\n  object-fit: scale-down;\r\n`;\r\n\r\nexport const ProductTitle = styled.h2`\r\n  ${props => {\r\n    if (props.as) return;\r\n\r\n    return css`\r\n      font-weight: 600;\r\n    `;\r\n  }}\r\n\r\n  margin-bottom: ${props => `${props.marginB}px`};\r\n\r\n  font-size: 30px;\r\n  line-height: 0.9;\r\n`;\r\n\r\nexport const OptionTitle = styled.p`\r\n  margin-bottom: 8px;\r\n\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const OptionBtnWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: ${props => `${props.gap}px`};\r\n\r\n  margin-bottom: ${props => `${props.marginB}px`};\r\n`;\r\n\r\nexport const OptionBtn = styled.button`\r\n  cursor: pointer;\r\n\r\n  ${({ type, active }) => {\r\n    switch (type) {\r\n      case 'text':\r\n        return css`\r\n          min-width: 63px;\r\n          max-width: 80px;\r\n          height: 45px;\r\n\r\n          background-color: transparent;\r\n          border: 1px solid #1d1f22;\r\n          color: #1d1f22;\r\n\r\n          font-family: 'Source Sans Pro', sans-serif;\r\n          font-size: 16px;\r\n          line-height: 1.12;\r\n          letter-spacing: 0.05em;\r\n\r\n          ${() => {\r\n            if (active)\r\n              return css`\r\n                background-color: #1d1f22;\r\n                color: #ffffff;\r\n              `;\r\n          }}\r\n        `;\r\n\r\n      case 'swatch':\r\n        return css`\r\n          width: 35px;\r\n          height: 35px;\r\n\r\n          border: 1px solid #fff;\r\n          background-color: ${props => props.bgColor};\r\n\r\n          ${() => {\r\n            if (active)\r\n              return css`\r\n                outline: 1px solid #5ece7b;\r\n              `;\r\n          }}\r\n        `;\r\n      default:\r\n        return;\r\n    }\r\n  }}\r\n`;\r\n\r\nexport const ProductPriceTitle = styled.p`\r\n  margin-top: 36px;\r\n  margin-bottom: 20px;\r\n\r\n  font-family: 'Roboto Condensed', sans-serif;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  line-height: 1;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const ProductPrice = styled.p`\r\n  margin-bottom: 24px;\r\n\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 0.75;\r\n`;\r\n\r\nexport const BtnAddition = styled.button`\r\n  padding: 16px 80px;\r\n  margin-bottom: 40px;\r\n  min-width: 292px;\r\n\r\n  border: none;\r\n  background-color: #5ece7b;\r\n  color: #fff;\r\n\r\n  text-transform: uppercase;\r\n\r\n  ${({ inStock }) =>\r\n    inStock\r\n      ? css`\r\n          opacity: 0.6;\r\n          cursor: default;\r\n        `\r\n      : css`\r\n          opacity: 1;\r\n          cursor: pointer;\r\n        `}\r\n`;\r\n\r\nexport const ProductDescription = styled.div`\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: 16px;\r\n`;\r\n","import { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// hoc\r\nimport { withGetProductById } from 'hoc';\r\n\r\n// components\r\nimport { Markup } from 'interweave';\r\nimport { Error, Loader } from 'components';\r\nimport {\r\n  GridContainer,\r\n  SideImagesList,\r\n  SideImage,\r\n  DescriptionSection,\r\n  ActiveImage,\r\n  ProductTitle,\r\n  OptionTitle,\r\n  OptionBtnWrapper,\r\n  OptionBtn,\r\n  ProductPriceTitle,\r\n  ProductPrice,\r\n  BtnAddition,\r\n  ProductDescription,\r\n} from './Product.styled';\r\n\r\nimport { numberWithDividers } from 'js';\r\n\r\nclass Product extends Component {\r\n  render() {\r\n    const { getProductByIdStatus } = this.props;\r\n    const { isSuccess, isError, isLoading, data, error } = getProductByIdStatus;\r\n\r\n    if (isLoading) {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (isError) {\r\n      return <Error error={error} />;\r\n    }\r\n\r\n    if (isSuccess) {\r\n      const { product } = data;\r\n      const { gallery, name, brand, prices, description, inStock, attributes } =\r\n        product;\r\n\r\n      const {\r\n        amount,\r\n        currency: { symbol },\r\n      } = prices[0];\r\n\r\n      return (\r\n        <GridContainer>\r\n          <SideImagesList>\r\n            {gallery.map((image, index) => {\r\n              // Omitting activa image\r\n              if (index === 0) {\r\n                return <Fragment key={index}></Fragment>;\r\n              }\r\n              return (\r\n                <li key={index}>\r\n                  <SideImage src={image} alt={name} />\r\n                </li>\r\n              );\r\n            })}\r\n          </SideImagesList>\r\n          <DescriptionSection>\r\n            <div>\r\n              <ActiveImage src={gallery[0]} alt={name} />\r\n            </div>\r\n            <div>\r\n              <ProductTitle marginB={16}>{name}</ProductTitle>\r\n              <ProductTitle as=\"p\" marginB={42}>\r\n                {brand}\r\n              </ProductTitle>\r\n              {attributes.map(({ id, name, type, items }) => (\r\n                <Fragment key={id}>\r\n                  <OptionTitle>{name}</OptionTitle>\r\n                  <OptionBtnWrapper gap={12} marginB={24}>\r\n                    {items.map(({ displayValue, id, value }, index) => {\r\n                      let active = false;\r\n                      let bgColor = '';\r\n\r\n                      // Setting background-color for swatch type\r\n                      if (type === 'swatch') {\r\n                        bgColor = value;\r\n                      }\r\n\r\n                      // Setting active image\r\n                      if (index === 0) {\r\n                        active = true;\r\n                      }\r\n                      return (\r\n                        <Fragment key={id}>\r\n                          <OptionBtn\r\n                            active={active}\r\n                            type={type}\r\n                            bgColor={bgColor}\r\n                          >\r\n                            {type === 'text' ? displayValue : null}\r\n                          </OptionBtn>\r\n                        </Fragment>\r\n                      );\r\n                    })}\r\n                  </OptionBtnWrapper>\r\n                </Fragment>\r\n              ))}\r\n              <ProductPriceTitle>Price:</ProductPriceTitle>\r\n              <ProductPrice>\r\n                {symbol}\r\n                {numberWithDividers(amount)}\r\n              </ProductPrice>\r\n              <BtnAddition disapled={!inStock} inStock={inStock}>\r\n                {!inStock ? 'Add to cart' : 'Out of stock'}\r\n              </BtnAddition>\r\n              <ProductDescription>\r\n                <Markup content={description} />\r\n              </ProductDescription>\r\n            </div>\r\n          </DescriptionSection>\r\n        </GridContainer>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nProduct.propTypes = {\r\n  getProductByIdStatus: PropTypes.shape({\r\n    data: PropTypes.shape({\r\n      product: PropTypes.shape({\r\n        attributes: PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            type: PropTypes.oneOf(['swatch', 'text']).isRequired,\r\n            items: PropTypes.arrayOf(\r\n              PropTypes.shape({\r\n                displayValue: PropTypes.string.isRequired,\r\n                value: PropTypes.string.isRequired,\r\n                id: PropTypes.string.isRequired,\r\n              })\r\n            ),\r\n          })\r\n        ),\r\n        brand: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n        gallery: PropTypes.array.isRequired,\r\n        inStock: PropTypes.bool.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        prices: PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            amount: PropTypes.number.isRequired,\r\n            currency: PropTypes.shape({\r\n              symbol: PropTypes.string.isRequired,\r\n            }),\r\n          })\r\n        ),\r\n      }),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default withGetProductById(Product);\r\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n"],"names":["source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","tagConfigs","a","content","TYPE_FLOW","self","type","address","invalid","audio","children","br","void","body","button","caption","parent","col","colgroup","details","dd","dl","dt","figcaption","footer","header","hr","img","li","main","ol","picture","rb","rp","rt","rtc","ruby","summary","table","tbody","td","tfoot","th","thead","tr","track","ul","video","wbr","createConfigBuilder","config","tagName","forEach","TAGS","freeze","BANNED_TAG_LIST","ALLOWED_TAG_LIST","filter","tag","ATTRIBUTES","alt","cite","class","colspan","controls","datetime","default","disabled","dir","height","href","id","kind","label","lang","loading","loop","media","muted","poster","rel","role","rowspan","scope","sizes","span","start","style","src","srclang","srcset","title","width","ATTRIBUTES_TO_PROPS","Element","attributes","className","selfClose","Tag","React","Filter","attribute","name","value","node","StyleFilter","String","match","INVALID_STYLES","ALLOWED_ATTRS","OPEN_TOKEN","undefined","allowed","banned","markup","blocked","matchers","keyIndex","constructor","props","_defineProperty","TypeError","allowList","applyAttributeFilters","filters","reduce","applyMatchers","string","parentConfig","matcher","canRenderChild","index","tokenizedString","elements","valid","elementIndex","matchedString","greedy","childConfig","noHtml","disableLineBreaks","nextMarkup","global","doc","allowAttributes","count","attr","newValue","newName","extractStyleAttribute","isSafe","FILTER_CAST_BOOL","from","styles","getTagConfig","common","parseNode","transform","transformOnlyAllowList","ELEMENT_NODE","allowElements","mergedText","elementProps","noHtmlExceptMatchers","INVALID_ROOTS","replaceTokens","open","nodes","text","tokenName","endIndex","push","createElement","isVoid","emptyContent","mainContent","_ref","containerTagName","parsedContent","baseNoWrap","noWrap","disableFilters","onBeforeParse","GridContainer","styled","SideImagesList","SideImage","DescriptionSection","ActiveImage","ProductTitle","as","css","marginB","OptionTitle","OptionBtnWrapper","gap","OptionBtn","active","bgColor","ProductPriceTitle","ProductPrice","BtnAddition","inStock","ProductDescription","Product","getProductByIdStatus","this","isSuccess","isError","isLoading","data","error","product","gallery","brand","prices","description","amount","symbol","currency","map","image","Fragment","items","displayValue","numberWithDividers","disapled","Markup","Component","withGetProductById","matchHtmlRegExp","module","exports","escape","str","exec","html","lastIndex","charCodeAt","substring"],"sourceRoot":""}