{"version":3,"file":"static/js/174.ac829679.chunk.js","mappings":"8TAGaA,EAAYC,EAAAA,GAAAA,GAAS,iJAUrBC,EAAcD,EAAAA,GAAAA,GAAS,yKAUvBE,EAAiBF,EAAAA,GAAAA,GAAS,sJAU1BG,EAAiBH,EAAAA,GAAAA,GAAS,qEAK1BI,EAAiBJ,EAAAA,GAAAA,KAAW,6CAI5BK,EAAiBL,EAAAA,GAAAA,OAAa,uK,mBChBrCM,EAAQ,qJAKV,OALU,oCACZC,iBAAmB,YAGjBC,EAFsB,EAAKC,MAAnBD,YAGV,EAAC,EAyCA,OAzCA,8BAED,WACE,IAAQE,EAAaC,KAAKF,MAAlBC,SASR,OACE,iCACE,SAACX,EAAS,oBACV,SAACE,EAAW,UACTS,EAASE,KAAI,SAAAC,GAAO,OACnB,SAAC,KAAW,CAEVA,QAASA,EACTC,SAAUA,EAAAA,EAAAA,MAFLD,EAAQE,GAGb,OAGN,UAACb,EAAc,YACb,UAACC,EAAc,YACb,qCACA,sCACA,sCAEF,UAACA,EAAc,YACb,SAACC,EAAc,sBACf,SAACA,EAAc,iBACf,SAACA,EAAc,6BAGnB,SAACC,EAAc,CAACW,KAAK,SAASC,QAASN,KAAKJ,iBAAiB,qBAKnE,KAAC,EA9CW,CAASW,EAAAA,eAiEjBC,EAAqB,CACzBX,UAAAA,EAAAA,IAGIY,GAAUC,EAAAA,EAAAA,KAXQ,SAAAC,GAItB,MAAO,CAAEZ,UAHQa,EAAAA,EAAAA,GAAmBD,GAGjBE,gBAFIC,EAAAA,EAAAA,GAAqBH,GAG9C,GAMyCH,GAEzC,GAAeO,EAAAA,EAAAA,IAAQN,EAASO,EAAAA,GAAhC,CAAiDrB,EAAU,O","sources":["pages/Cart/Cart.styled.jsx","pages/Cart/Cart.jsx"],"sourcesContent":["// import { css } from 'styled-components';\r\nimport styled from 'styled-components';\r\n\r\nexport const PageTitle = styled.h1`\r\n  margin-bottom: 54px;\r\n\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1.25;\r\n\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const ProductList = styled.ul`\r\n  padding: 24px 0;\r\n  margin-bottom: 32px;\r\n\r\n  border-top: 1px solid #e5e5e5;\r\n  border-bottom: 1px solid #e5e5e5;\r\n\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const TotalCountList = styled.ul`\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  gap: 10px;\r\n\r\n  font-size: 24px;\r\n  line-height: 1.17;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const TotalCountItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const TotalCountSpan = styled.span`\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const SubmitOrderBtn = styled.button`\r\n  padding: 13px 114px;\r\n\r\n  background-color: #5ece7b;\r\n  color: #fff;\r\n  border: none;\r\n\r\n  text-transform: uppercase;\r\n\r\n  cursor: pointer;\r\n`;\r\n","import { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// hoc\r\nimport { withUpdateTitle } from 'hoc';\r\n\r\n// redux\r\nimport { selectActiveCurrency, selectCartProducts } from 'redux/selectors';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '@reduxjs/toolkit';\r\nimport { clearCart } from 'redux/cart/cartSlice';\r\n\r\n// components\r\nimport { CartProduct } from 'components';\r\nimport {\r\n  PageTitle,\r\n  ProductList,\r\n  TotalCountList,\r\n  TotalCountItem,\r\n  TotalCountSpan,\r\n  SubmitOrderBtn,\r\n} from './Cart.styled';\r\n\r\n// constants\r\nimport cartType from 'constants/cartType';\r\n\r\nclass CartPage extends PureComponent {\r\n  handleOrderClick = () => {\r\n    const { clearCart } = this.props;\r\n\r\n    clearCart();\r\n  };\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n\r\n    // activeCurrency\r\n    // Setting memoized currency, so it wouldn't iterate on each render\r\n    // const {\r\n    //   amount,\r\n    //   currency: { symbol },\r\n    // } = this.memoizedActivePrice(prices, activeCurrency);\r\n\r\n    return (\r\n      <>\r\n        <PageTitle>Cart</PageTitle>\r\n        <ProductList>\r\n          {products.map(product => (\r\n            <CartProduct\r\n              key={product.id}\r\n              product={product}\r\n              cartType={cartType.page}\r\n            />\r\n          ))}\r\n        </ProductList>\r\n        <TotalCountList>\r\n          <TotalCountItem>\r\n            <p>Tax 21%:</p>\r\n            <p>Quantity:</p>\r\n            <p>Total:</p>\r\n          </TotalCountItem>\r\n          <TotalCountItem>\r\n            <TotalCountSpan>$42.00</TotalCountSpan>\r\n            <TotalCountSpan>3</TotalCountSpan>\r\n            <TotalCountSpan>$200.00</TotalCountSpan>\r\n          </TotalCountItem>\r\n        </TotalCountList>\r\n        <SubmitOrderBtn type=\"button\" onClick={this.handleOrderClick}>\r\n          Order\r\n        </SubmitOrderBtn>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCartPage.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n  activeCurrency: PropTypes.shape({\r\n    symbol: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n  }),\r\n  clearCart: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const products = selectCartProducts(state);\r\n  const activeCurrency = selectActiveCurrency(state);\r\n\r\n  return { products, activeCurrency };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  clearCart,\r\n};\r\n\r\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(enhance, withUpdateTitle)(CartPage, 'Cart');\r\n"],"names":["PageTitle","styled","ProductList","TotalCountList","TotalCountItem","TotalCountSpan","SubmitOrderBtn","CartPage","handleOrderClick","clearCart","props","products","this","map","product","cartType","id","type","onClick","PureComponent","mapDispatchToProps","enhance","connect","state","selectCartProducts","activeCurrency","selectActiveCurrency","compose","withUpdateTitle"],"sourceRoot":""}